swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  

  /user/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: get a user's transactions
      description: Retrieve transactions for the month
      produces:
        - application/json
      responses:
        '200':
          description: transactions from user obtained
          schema: 
            $ref: '#/definitions/BankAccount'
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
        
  /user/transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: get a single transaction
      description: Get single transaction by it's ID
      parameters:
        - in: path
          name: transactionId
          description: ID of the transaction to find
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Bad params
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
          
    patch:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: update a single transaction
      description: Update a single transaction by it's ID
      parameters:
        - in: path
          name: transactionId
          description: ID of the transaction to find
          required: true
          type: string
        - in: body
          name: payload
          description: transaction payload to update
          required: true
          schema:
            $ref: '#/definitions/UpdateTransaction'
      produces:
        - application/json
      responses:
        '200':
          description: User profile successfully retrieved
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Bad params
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
          
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  BankAccount:
    type: array
    items:
      type: object
      properties:
        accountId:
          type: string
        transactions:
          type: array
          items:
            $ref: '#/definitions/Transaction'
  Transaction:
    type: object
    properties:
      id: 
        type: string
      bankAccountId:
        type: string
      date:
        type: string
        format: date-time
      description:
        type: string
      amount: 
        type: number
      balance: 
        type: number
      type:
        type: string
      category:
        type: string
      notes:
        type: string
  UpdateTransaction:
    type: object
    properties:
      date:
        type: string
        format: date-time
        description: Date of the transaction
      description:
        type: string
        description: Description of the transaction
      amount:
        type: number
        description: Amount of the transaction
      balance:
        type: number
        description: Balance after the transaction
      type:
        type: string
        description: Type of transaction (e.g., credit, debit)
      category:
        type: string
        description: Category of the transaction
      notes:
        type: string
        description: Additional notes regarding the transaction